CC = @CC@
FC = @FC@
FFTW_LDLIBS = -lfftw3
FFTW_INCLUDES = -I/usr/include
FFTW_LDFLAGS=
COMMON_FLAGS = -Wall -pedantic -O3 -fPIC $(FFTW_INCLUDES) -Iinclude
CFLAGS = $(COMMON_FLAGS)
FFLAGS = $(COMMON_FLAGS)

default: lib/libresample.so bin/benchmark

bin/benchmark.o: include/timer.h include/allocation.h include/interpolate.h \
  include/phase_shift.h include/naive.h include/padding_aware.h

lib/libresample.so: lib/allocation.o lib/common.o lib/interpolate.o lib/naive.o \
  lib/padding_aware.o lib/phase_shift.o lib/timer.o
	$(CC) -shared -fPIC $(FFTW_LDFLAGS) $^ -o $@ $(FFTW_LDLIBS)

bin/%: bin/%.o lib/libresample.so
	$(CC) $< -o $@ -Llib -lresample -Wl,-rpath=../lib -Wl,-rpath=./lib

lib/allocation.o: include/allocation.h

lib/common.o: lib/common.h

lib/interpolate.o: include/timer.h include/interpolate.h

lib/naive.o: include/interpolate.h include/naive.h include/timer.h \
  include/allocation.h lib/common.h include/fftw_cycle.h

lib/padding_aware.o: include/interpolate.h include/padding_aware.h include/timer.h \
  include/allocation.h lib/common.h include/fftw_cycle.h

lib/phase_shift.c: include/interpolate.h include/phase_shift.h include/timer.h \
  include/allocation.h include/fftw_cycle.h lib/common.h

lib/timer.o: include/timer.h

clean: 
	rm -f lib/libresample.so lib/allocation.o lib/common.o lib/interpolate.o \
	  lib/naive.o lib/padding_aware.o lib/phase_shift.o lib/timer.o \
	  bin/benchmark.o bin/benchmark

.PHONY: default clean
